/**
 * Loading Panel Mediator
 *
 * Author: zzc
 * Date: 2013/11/29
 *
 */
using System.Collections.Generic;
using PureMVC.Interfaces;
using PureMVC.Patterns;
using UnityEngine;

namespace TangGame.View
{
  public class LoadingPanelMediator : Mediator
  {
    private delegate void Handle (INotification notification);

    public new const string NAME = "LOADING_PANEL_MEDIATOR";

    /// <summary>
    ///   正在加载的面板
    /// </summary>
    public static GameObject gameObject;
    private Dictionary<string, Handle> handleTable = new Dictionary<string, Handle> ();
    private List<string> interests = new List<string> ();

    /// <summary>
    ///   构造方法
    /// </summary>
    public LoadingPanelMediator (GameObject gameObject) : base( NAME )
    {
      LoadingPanelMediator.gameObject = gameObject;
      handleTable.Add (NtftNames.TG_LOADING_START, HandleLoadingStart);
      handleTable.Add (NtftNames.TG_LOADING_PROGRESS, HandleLoadingProgress);
      handleTable.Add (NtftNames.TG_LOADING_MESSAGE, HandleLoadingMessage);
      handleTable.Add (NtftNames.TG_LOADING_END, HandleLoadingEnd);

    }

    /// <summary>
    ///   感兴趣的消息
    /// </summary>
    public override IList<string> ListNotificationInterests ()
    {
      if (interests.Count == 0) {
        interests.Add (NtftNames.TG_LOADING_START);
        interests.Add (NtftNames.TG_LOADING_PROGRESS);
        interests.Add (NtftNames.TG_LOADING_MESSAGE);
        interests.Add (NtftNames.TG_LOADING_END);
      }
      return interests;
    }

    /// <summary>
    ///   处理通知
    /// </summary>
    public override void HandleNotification (INotification notification)
    {
      if (handleTable.ContainsKey (notification.Name)) {
        handleTable [notification.Name] (notification);
      }
    }

    /// <summary>
    ///   加载开始
    /// </summary>
    private void HandleLoadingStart (INotification notification)
    {
      //
//      gameObject.SetActive (true);
      NGUITools.GetRoot(gameObject).SetActive(true);
      gameObject.SendMessage ("UpdateProgress", 0F);
    }

    /// <summary>
    ///   加载进度更新
    /// </summary>
    private void HandleLoadingProgress (INotification notification)
    {
      gameObject.SendMessage ("UpdateProgress", (float)notification.Body);
    }

    /// <summary>
    ///   加载消息更新
    /// </summary>
    private void HandleLoadingMessage (INotification notification)
    {
      gameObject.SendMessage ("UpdateMessage", (string)notification.Body);
    }

    /// <summary>
    ///   加载结束
    /// </summary>
    private void HandleLoadingEnd (INotification notification)
    {
      NGUITools.GetRoot(gameObject).SetActive(false);
//      gameObject.SetActive (false);
    }
    
  }
}